// Generated by CoffeeScript 1.6.3
(function() {
  var Carousel;

  Carousel = (function() {
    function Carousel(element, options) {
      var $element;
      $element = $(element);
      this.options = options;
      this.rect = $element.width();
      this.$inner = $element.find(this.options.inner_selector);
      this.$items = $element.find(this.options.items_selector);
      this.$indicators = $element.find(this.options.indicators_selector);
      this._current = 0;
      this._sliding = false;
      this._timer = null;
      if (this.options.auto) {
        this.start();
      }
    }

    Carousel.prototype.show = function(index) {
      var $next, is_prev,
        _this = this;
      is_prev = arguments[1] === true ? true : false;
      if (this._sliding) {
        return false;
      }
      if (index === this._current) {
        return false;
      }
      this._sliding = true;
      this.$indicators.eq(this._current).removeClass('active');
      this.$indicators.eq(index).addClass('active');
      $next = this.$items.eq(index);
      $next.addClass('active');
      $next.css('left', is_prev ? "-" + this.rect + "px" : "" + this.rect + "px");
      this.$inner.animate({
        left: (is_prev ? this.rect : -this.rect)
      }, this.options.duration, function() {
        $next.css('left', '0px');
        _this.$inner.css('left', '0px');
        _this.$items.eq(_this._current).removeClass('active');
        _this._current = index;
        return _this._sliding = false;
      });
      return false;
    };

    Carousel.prototype.prev = function() {
      var index;
      index = this._current - 1 < 0 ? this.$items.length - 1 : this._current - 1;
      return this.show(index, true);
    };

    Carousel.prototype.next = function() {
      var index;
      index = this._current + 1 > this.$items.length - 1 ? 0 : this._current + 1;
      return this.show(index);
    };

    Carousel.prototype.start = function() {
      var _this = this;
      this.stop();
      return this._timer = setInterval(function() {
        return _this.next();
      }, this.options.delay);
    };

    Carousel.prototype.stop = function() {
      if (this._timer) {
        return this._timer = clearInterval(this._timer);
      }
    };

    return Carousel;

  })();

  $.fn.carousel = function(options) {
    var defaults;
    defaults = {
      inner_selector: '.js-carousel-inner',
      items_selector: '.js-carousel-inner .item',
      indicators_selector: '.js-carousel-indicators .item',
      delay: 6000,
      duration: 500,
      auto: true
    };
    options = $.extend(defaults, options);
    return this.each(function() {
      var $this, data;
      $this = $(this);
      data = $this.data('py.carousel');
      if (!data) {
        return $this.data('py.carousel', (data = new Carousel(this, options)));
      }
    });
  };

}).call(this);
